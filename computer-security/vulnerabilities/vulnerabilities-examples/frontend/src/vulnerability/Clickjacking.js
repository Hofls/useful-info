import React, { Component } from "react";
import './Vulnerability.css';
import './Clickjacking.css';


class Clickjacking extends Component {

    constructor(props) {
        super(props);
    }

    render() {
        let explanation = `
        Clickjacking.
        Page controlled by malicious actor contains iframe with 0 opacity (invisible).
        With completely different, visible interface on behind it. 
        When user tries to interact with visible interface - he actually interacts with invisible one. 
        E.g. victim can unknowingly press "retweet" button, facebook "like", etc.
        Fix: proper CSP header (Content-Security-Policy: frame-ancestors 'none';)
        `;
        const iframe = '<iframe src="http://localhost:8080/twitter.html"></iframe>';
        return (
            <div className="App">
                <div className="explanation">
                    {explanation}
                </div>

                <div>
                    If you want to see HL3 release date:
                </div>
                <div dangerouslySetInnerHTML={{ __html: iframe }} />
                <button>Click here</button>

            </div>
        );
    }
}

export default Clickjacking;
